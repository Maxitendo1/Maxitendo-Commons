<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>MagicNumber:MainActivity.kt$MainActivity$12</ID>
    <ID>MagicNumber:MainActivity.kt$MainActivity$2024</ID>
    <ID>MagicNumber:MainActivity.kt$MainActivity$30</ID>
    <ID>MaxLineLength:MainActivity.kt$MainActivity$FAQItem(com.maxitendo.commons.R.string.faq_1_title_commons, com.maxitendo.commons.R.string.faq_1_text_commons)</ID>
    <ID>MaxLineLength:MainActivity.kt$MainActivity$FAQItem(com.maxitendo.commons.R.string.faq_4_title_commons, com.maxitendo.commons.R.string.faq_4_text_commons)</ID>
    <ID>MaxLineLength:MainActivity.kt$MainActivity$faqItems.add(FAQItem(com.maxitendo.commons.R.string.faq_2_title_commons, com.maxitendo.commons.R.string.faq_2_text_commons))</ID>
    <ID>MaxLineLength:MainActivity.kt$MainActivity$faqItems.add(FAQItem(com.maxitendo.commons.R.string.faq_6_title_commons, com.maxitendo.commons.R.string.faq_6_text_commons))</ID>
    <ID>MaxLineLength:MainActivity.kt$MainActivity$val isTopAppBarColorIcon by config.isTopAppBarColorIcon.collectAsStateWithLifecycle(initialValue = config.topAppBarColorIcon)</ID>
    <ID>MaxLineLength:MainActivity.kt$MainActivity$val showMoreApps = onEventValue { !resources.getBoolean(com.maxitendo.commons.R.bool.hide_google_relations) }</ID>
    <ID>MaxLineLength:MainScreen.kt$customTopBar</ID>
    <ID>MaxLineLength:TestDialogActivity.kt$TestDialogActivity$//todo create helper for private fun createFolder(path: String, alertDialog: AlertDialog) to extract bundled logic</ID>
    <ID>MaxLineLength:TestDialogActivity.kt$TestDialogActivity$AddOrEditBlockedNumberAlertDialog(alertDialogState = this, blockedNumber = null, deleteBlockedNumber = {}) {}</ID>
    <ID>MaxLineLength:TestDialogActivity.kt$TestDialogActivity$ChangeDateTimeFormatAlertDialog</ID>
    <ID>MaxLineLength:TestDialogActivity.kt$TestDialogActivity$Log.d("getGridColorPickerAlertDialogState", "wasPositivePressed=$wasPositivePressed color=${color.toHex()}")</ID>
    <ID>MaxLineLength:TestDialogActivity.kt$TestDialogActivity$Log.d("getLineColorPickerAlertDialogState", "wasPositivePressed=$wasPositivePressed color=${color.toHex()}")</ID>
    <ID>MaxLineLength:TestDialogActivity.kt$TestDialogActivity$SimpleListItem(2, R.string.record_audio, imageRes = R.drawable.ic_microphone_vector, selected = true)</ID>
    <ID>ModifierMissing:MainScreen.kt$MainScreen</ID>
    <ID>TooManyFunctions:MainActivity.kt$MainActivity : BaseSimpleActivity</ID>
    <ID>TooManyFunctions:TestDialogActivity.kt$TestDialogActivity : ComponentActivity</ID>
    <ID>UnusedPrivateMember:MainActivity.kt$MainActivity$private fun securityDialog()</ID>
    <ID>UnusedPrivateMember:MainScreen.kt$@Composable @MyDevices private fun MainScreenPreview()</ID>
    <ID>UnusedPrivateMember:MainScreen.kt$@Composable @ReadOnlyComposable private fun actionModeBgColor(): Color</ID>
    <ID>WildcardImport:MainActivity.kt$import com.maxitendo.commons.compose.extensions.*</ID>
    <ID>WildcardImport:MainActivity.kt$import com.maxitendo.commons.extensions.*</ID>
    <ID>WildcardImport:MainScreen.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:MainScreen.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:TestDialogActivity.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:TestDialogActivity.kt$import com.maxitendo.commons.dialogs.*</ID>
    <ID>WildcardImport:TestDialogActivity.kt$import com.maxitendo.commons.extensions.*</ID>
    <ID>WildcardImport:TestDialogActivity.kt$import com.maxitendo.commons.models.*</ID>
  </CurrentIssues>
</SmellBaseline>
